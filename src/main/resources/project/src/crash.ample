// @import "src/test2.ample";
bool isPrime(int number) {
	if(number < 2) return false;
	for(int i = 2; i * i <= number; i++) {
		if(!(number % i))
			return false;
	}
	
	return true;
}

void println(char* str) {
	char* buffer = &(0xb8000);
	
	while(*str) {
		*buffer = *str;
		str++;
		buffer++;
	}
}

void printInt(int number) {
	char* mem = "0";
	while(number != 0) {
		int digit = number % 10;
		number /= 10;
		
		*mem = '0' + (byte)digit;
		println(mem);
	}
}

void testing_parameters(byte a, short b, int c, long d, int e, int f, int g, int h) {
	a++;
	b++;
	c++;
	d++;
	e++;
	f++;
	g++;
	h++;
	
	byte A = a >> 5;
	short B = b >> 7;
	int C = c >> 9;
	long D = d >> 11;
	return;
}


void main() {
	char* string = "Hello World:::: TESTING THIS COMPILER\n\n";
	
	// This is a bug and should be fixed!!!
	
	testing_parameters(0, 1, 2, 3, 4, 5, 6, 7);
	
	int idx = 3;
	int j = 0;
	Label:
		println("Looping foreverLooping foreverLooping foreverLooping foreverLooping foreverLooping foreverLooping foreverLooping forever\n");
		idx -= 1;
		for(int i = 3; i < 1000000; i++) {
			j++;
		}
		if(idx > 0) goto Label;
	
	
	println(string);
	
	for(int i = 0; i < 100; i++) {
		println("Is ");
		printInt(i);
		println(" a prime? ");
		
		if(isPrime(i)) {
			println("(true)\n");
		} else {
			println("(false)\n");
		}
	}
}

/*
void test2() {
	// Testing...
	int a = 32;
	int b = 12;
	
	int c = a ? b:32;
	
}

int test3() {
	return 3;
}
*/