{
    void* u = &label;

    label:

    int j = 32;

    j:

    const volatile unsigned char******** test;
    goto label;

    void* k = &label;
    void* eof = &EOF;

    testing();
    //int a = testing;
}

void testing() {
    testing();
}
void testing2() {}

void* main(int aa, int bb, int cc) {
    void* eof = &EOF;
    int a = 32;
    {
        int b;
        {
            int c;
        }
    }
    float q = 32;

    a = a + 32;
	Test test;
	test.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z = 32;

	a = d + 3;
	return &test + &global + &testing;
}

int GLOBAL = 32;
// SpookyVM test class

// Imported function
void printInt(int value);
void print(int value);
int random();

bool isPrime(int number) {
	if (number < 2) return false;
	for (int i = 2; i * i <= number; i = i + 1) {
		if(!(number % i))
			return false;
	}

	return true;
}

void prints(char* chars) {
	int v = (:int)(a);

	while (*chars != 0) {
		char b = *(chars = chars + 1);
		int a = b + (b / b) * 0;
		print(a);
	}
}

void println(char* chars) {
	prints(chars);
	print('\n');
}

void main2() {
	prints("Testing weird stuff Huh 11223344\nabcd");

	/*
	for (int i = 0; i < 100; i++) {
		prints("Is ");
		printInt(i);
		prints(" prime? (");

		if (isPrime(i)) {
			println("True)\n");
		} else {
			println("False)");
		}
	}

	print('\n');
	*/
}

void main3(int a) {
	int _a = (
		(1 + 2),  //   3
		(1 - 2),  //  -1
		(1 * 2),  //   2
		(5 / 3),  //   1
		(5 % 2),  //   1
		(9 & 8),  //   8
		(9 | 2),  //  11
		(9 ^ 2),  //  11
		(7 >> 2), //   1
		(3 << 1), //   6

		(!1),     //   0
		(~9),     // -10
		(-3),     //  -3

		(1 > 0),  //   1
		(1 >= 2), //   0
		(5 < 6),  //   1
		(2 <= 1), //   0

		(1 && 0), //   0
		(0 || 1)  //   1
	);


	int _b = 0;
	/*
	_b +=  1; //   1
	_b -=  2; //  -1
	_b *= -3; //   3
	_b /=  2; //   1
	_b <<= 3; //   8
	_b >>= 2; //   2
	_b |=  5; //   7
	_b &=  3; //   3
	_b %=  2; //   1
	_b ^=  5; //   4
	*/

    int g1 = a * b * c * d * e * f * g * h * i * j * k * l * m * n;
    int g2 = a + b + c + d + e + f + g + h + i + j + k + l + m + n;
    int g3 = a - b - c - d - e - f - g - h - i - j - k - l - m - n;

    g[32323232 + sadf + as +23 * 32][0][a()] = 231;
    a++; a--;
    ++a; --a;
    g = 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1;
    g = 1 ^ 1 ^ 1 ^ 1 ^ 1 ^ 1 ^ 1 ^ 1;
    g = 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1;
    g = 1&& 1&& 1&& 1&& 1&& 1&& 1&& 1;
    g = 1|| 1|| 1|| 1|| 1|| 1|| 1|| 1;

	int _c = ((((((((((((1 + _a) + 2 + _b) + 3 + _a) + 4 + _b) + 5 + _a) + 6) + _b) + 7) + _a) + 8) + _b) + 9 + _a);

	//int _x = 0, _y = 0;

	// int x[1];

	// x[0] = x[0] + 1;

	//*(&_x)++;

	//_x += _y;
	//_x += _y;
}

EOF: