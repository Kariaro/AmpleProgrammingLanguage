// Empty file

namespace std {
    u32: var1 = 0u;

    func test() {
        u32: value_should_be_in_root_namespace = 0u;
        ret;
    }

    namespace path {
        u32: var1 = 0u;

        func (export) test(i32: param1) : u8 {
            ret cast<u8>(1);
        }
    }
}

// Function is in another scope
func test() {
    ret;
}

func testing() {
    // Should call the local function
    test();

    // Should call the namespace function
    std::test();

    // Should call inner namespace function
    std::path::test(1);

    ret;
}

func (export) printstr (u8[]: pointer, i64: length) {
    compiler<asm>(
        "mov rsi, {}" : pointer
        "mov rdx, {}" : length
        "mov rdi, 1"
        "mov rax, 1"
        "syscall"
    );

    // call test in the linked file
    // u8: val = std::path::test(1);

    ret;
}