# IDENTIFIER
TOKEN IDENTIFIER: {"[a-zA-Z_][a-zA-Z0-9_]*"}
TOKEN STRINGLITERAL: {"\".*\""}
TOKEN NUMBERLITERAL: {"[0-9]+"}
                   | {"0x[a-fA-F0-9]+"}
				   | {"[0-9]+.[0-9]+"}

START program

modifiers: 'export'

type: 'void'
	| 'char'
	| 'bool'
	| 'int'
    | 'uint_8'
	| 'uint_16'
	| 'uint_32'
	| 'uint_64'

program: [ function ]

# Conditions
condition: expression '<' expression
		 | expression '>' expression
		 | expression '=' '=' expression
		 | expression '!' '=' expression
		 | expression '>' '=' expression
		 | expression '<' '=' expression

# 

argument: type IDENTIFIER
arguments: ( argument [ ',' argument ] )

function: [modifiers] type IDENTIFIER '(' ( arguments ) ')' '{' [ statement ] '}'

statement: '{' [ statement ] '}'
		 | 'if' '(' condition ')' '{' [ statement ] '}' 'else' statement
		 | 'if' '(' condition ')' '{' [ statement ] '}'
		 | 'while' '(' condition ')' '{' [ statement ] '}'
		 | 'continue' ';'
		 | 'break' ';'
		 | 'return' ( expression ) ';'
		 | ';'

call_expression: IDENTIFIER '(' ')' ';'

expression: NUMBERLITERAL
		  | STRINGLITERAL
		  | IDENTIFIER
		  | '(' expression ')'
		  | call_expression
	